<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: The Trials And Tribulations Of 10KB</title>
	<atom:link href="http://www.russellheimlich.com/blog/the-trials-and-tribulations-of-10kb/feed/" rel="self" type="application/rss+xml" />
	<link>http://www.russellheimlich.com/blog/the-trials-and-tribulations-of-10kb/</link>
	<description>The Blog of Russell Heimlich</description>
	<lastBuildDate>Thu, 26 Nov 2015 14:13:48 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.4.2</generator>
	<item>
		<title>By: Russell Heimlich</title>
		<link>http://www.russellheimlich.com/blog/the-trials-and-tribulations-of-10kb/comment-page-1/#comment-1611</link>
		<dc:creator><![CDATA[Russell Heimlich]]></dc:creator>
		<pubDate>Thu, 26 Aug 2010 16:03:24 +0000</pubDate>
		<guid isPermaLink="false">http://www.russellheimlich.com/blog/?p=2259#comment-1611</guid>
		<description><![CDATA[Everything I do is applicable for work in some way or another. Pet projects like this keep me on my toes. 

Efficency and consistency is important because many times I need to make changes. If I lay out my code in a weird way that is harder to change later down the line, I pay for it in having to rewrite a lot of it. I&#039;ve learned it&#039;s easier to build modularity in upfront for time savings down the line. The easier code is to change, the easier my job becomes.]]></description>
		<content:encoded><![CDATA[<p>Everything I do is applicable for work in some way or another. Pet projects like this keep me on my toes. </p>
<p>Efficency and consistency is important because many times I need to make changes. If I lay out my code in a weird way that is harder to change later down the line, I pay for it in having to rewrite a lot of it. I&#8217;ve learned it&#8217;s easier to build modularity in upfront for time savings down the line. The easier code is to change, the easier my job becomes.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Ralph E Heimlich </title>
		<link>http://www.russellheimlich.com/blog/the-trials-and-tribulations-of-10kb/comment-page-1/#comment-1610</link>
		<dc:creator><![CDATA[Ralph E Heimlich ]]></dc:creator>
		<pubDate>Wed, 25 Aug 2010 11:47:31 +0000</pubDate>
		<guid isPermaLink="false">http://www.russellheimlich.com/blog/?p=2259#comment-1610</guid>
		<description><![CDATA[So, did you learn anything useful for work doing all this?  Does what you do require efficiency and speed versus just consistency and content?]]></description>
		<content:encoded><![CDATA[<p>So, did you learn anything useful for work doing all this?  Does what you do require efficiency and speed versus just consistency and content?</p>
]]></content:encoded>
	</item>
</channel>
</rss>